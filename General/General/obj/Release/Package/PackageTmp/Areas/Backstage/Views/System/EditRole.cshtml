@model General.Model.SystemRole
@{
    ViewBag.Nav = new List<string>() { "系统设置", "修改角色" };
    ViewBag.Title = "编辑角色";
    Layout = "~/Areas/Backstage/Views/Shared/_Layout.cshtml";
}
@section Styles
{
    <style type="text/css">
        .field-validation-error
        {
            color: Red;
        }
        .input-validation-error
        {
            background-color: Red;
        }
    </style>
}
<script src="../../../../Scripts/UI/Bootstrap/js/jquery-1.11.1.js" type="text/javascript"></script>
<script language="javascript" type="text/javascript">
    $(function () {
        $("#formAddRole #submit").bind("click", function () {
            var validate = true;
            //验证角色名称
            var $roleName = $("#roleName");
            var $nameLabel = $roleName.siblings("label:eq(0)");
            var $nameDiv = $roleName.parent();
            if ($roleName == null || $roleName.val() == "") {
                validate = false;
                $nameLabel.show().text("角色名称不能为空！");
                $nameDiv.addClass("has-warning");
            }
            else {
                //alert($roleName.val().length);
                if ($roleName.val().length > 100) {
                    $nameLabel.show().text("长度不能超过100！");
                    $nameDiv.addClass("has-warning");
                    return;
                }
                $nameLabel.hide().text();
                $nameDiv.removeClass("has-warning");
            }
            //验证描述
            var $roleDescript = $("#Description");
            $nameLabel = $roleDescript.siblings("label:eq(0)");
            $nameDiv = $roleDescript.parent();
            if ($roleDescript == null || $roleDescript.val() == "") {
                validate = false;
                $nameLabel.show().text("角色描述不能为空！");
                $nameDiv.addClass("has-warning");
            }
            else {
                if ($roleDescript.val().length > 200) {
                    $nameLabel.show().text("长度不能超过200！");
                    $nameDiv.addClass("has-warning");
                    return;
                }
                $nameLabel.hide().text();
                $nameDiv.removeClass("has-warning");
            }
            if (validate) {
                var $roleid = $("#roleid").val();
                var data = "roleid=" + $roleid + "&RoleName=" + $roleName.val() + "&Description=" + $roleDescript.val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("EditRole", "System")',
                    data: data,
                    success: function (result) {
                        if (result.Code > 0) {
                            Notify(result.msg, 'bottom-right', '5000', 'success', 'fa-edit', true);
                        }
                        else {
                            Notify(result.msg, 'bottom-right', '5000', 'danger', 'fa-edit', true);
                        }
                    }
                });
            }

        });
    });
</script>
@*}*@
<div class="row">
    <div class="col-lg-12 col-sm-12 col-xs-12">
        <div class="widget">
            <div class="widget-header bordered-left bordered-blue">
                <span class="widget-caption"><i class="icon fa fa-user"></i>&nbsp;修改角色</span>
            </div>
            <div class="widget-body bordered-left bordered-blueberry">
                <form role="form" id="formAddRole">
                @*@using (Html.BeginForm("EditRole", "system", FormMethod.Post, new { @id = "formAddRole22222222" }))
                {*@
                <div class="editor-field" style="display: none;">
                    @Html.TextBoxFor(model => model.Id, new { @readonly = "readonly", @id = "roleid" })
                    @Html.ValidationMessageFor(model => model.Id)
                </div>
                <div class="form-group  has-feedback textbox_placeholder">
                    角色
                    <label class="control-label" for="roleName">
                    </label>
                    @*@Html.EditorFor(model => model.RoleName)*@
                    @Html.ValidationMessageFor(model => model.RoleName)
                    <input type="text" class="form-control" id="roleName" value="@Model.RoleName" maxlength="100" />
                    <span class="form-control-feedback"><i class="fa fa-user"></i></span>
                </div>
                <div class="form-group  has-feedback textbox_placeholder">
                    描述
                    <label class="control-label" for="roleDescript">
                    </label>
                    @Html.ValidationMessageFor(model => model.Description)
                    <textarea type="text" class="form-control" id="Description" rows="10">@Model.Description</textarea>
                    <span class="form-control-feedback"><i class="fa fa-quote-right"></i></span>
                </div>
                <button type="button" id="submit" class="btn btn-primary">
                    <i class="icon fa fa-plus"></i>修改
                </button>
                <a href="@Url.Action("role", "system")" class="btn btn-primary"><i class="icon fa fa-mail-reply">
                </i>返回</a> @*}*@
                </form>
            </div>
        </div>
    </div>
</div>
@*<h2>EditRoleView</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>SystemRole</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.RoleName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RoleName)
            @Html.ValidationMessageFor(model => model.RoleName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Path)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Path)
            @Html.ValidationMessageFor(model => model.Path)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Depth)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Depth)
            @Html.ValidationMessageFor(model => model.Depth)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ParentId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ParentId)
            @Html.ValidationMessageFor(model => model.ParentId)
        </div>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.IsLock)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsLock)
            @Html.ValidationMessageFor(model => model.IsLock)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastUpadateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastUpadateTime)
            @Html.ValidationMessageFor(model => model.LastUpadateTime)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
*@